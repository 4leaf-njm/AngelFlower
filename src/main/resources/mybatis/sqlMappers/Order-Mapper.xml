<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Order-Mapper">
	<resultMap id="orderMap" type="order">
		<id property="orderNo" column="order_no" />
		<result property="orderSerial" column="order_serial" />
		<result property="memId" column="mem_id" />
		<result property="memName" column="mem_name" />
		<result property="memPhone" column="mem_phone" />
		<result property="memEmail" column="mem_email" />
		<result property="receiveName" column="receive_name" />
		<result property="receivePhone" column="receive_phone" />
		<result property="receiveAddr" column="receive_addr" />
		<result property="orderMsg1" column="order_msg1" />
		<result property="orderMsg2" column="order_msg2" />
		<result property="orderRequest" column="order_request" />
		<result property="hopeDate" column="hope_date" />
		<result property="orderDate" column="order_date" />
		<result property="orderWay" column="order_way" />
		<result property="orderState" column="order_state" />
		<result property="useSave" column="use_save" />
		<result property="odetailNo" column="odetail_no" />
		<result property="prodNo" column="prod_no" />
		<result property="quantity" column="quantity" />
		<result property="prodName" column="prod_name" />
		<result property="prodPrice1" column="prod_price1" />
		<result property="prodPrice2" column="prod_price2" />
		<result property="prodSave" column="prod_save" />
		<result property="prodImage" column="prod_image" />
		<result property="prodCategory" column="category" />
		<result property="reviewyn" column="review_yn" />
		<result property="cancelyn" column="cancel_yn" />
		<result property="depAccount" column="dep_account" />
		<result property="type" column="type" />
		<result property="baljuPrice" column="balju_price" />
		<result property="baljuNo" column="balju_no" />
	</resultMap>
	
	<select id="selectOrderByNo" parameterType="int" resultMap="orderMap">
		select * from order_view where order_no = #{orderNo} limit 1
	</select>
	
	<select id="selectOrderDetailList" parameterType="int" resultMap="orderMap">
		select * from order_view where order_no = #{orderNo}
		order by odetail_no desc
	</select>
	
	<update id="insertOrder" parameterType="hashmap">
		insert into `order`(order_serial, mem_id, receive_name, receive_phone, receive_addr, order_msg1, order_msg2, 
		order_request, hope_date, order_way, order_state, use_save, mem_name, mem_phone, mem_email, type, balju_price, balju_no)
		values (#{order.orderSerial}, #{order.memId}, #{order.receiveName}, #{order.receivePhone}, #{order.receiveAddr},
		#{order.orderMsg1}, #{order.orderMsg2}, #{order.orderRequest}, #{order.hopeDate}, #{order.orderWay}, #{orderState},
		#{order.useSave}, #{order.memName}, #{order.memPhone}, #{order.memEmail}, #{order.type}, #{order.baljuPrice}, #{order.baljuNo})
	</update>
	
	<update id="insertOrderDetail" parameterType="order">
		insert into order_detail(order_no, prod_no, quantity)
		values(#{orderNo}, #{prodNo}, #{quantity})
	</update>
	
	<select id="selectMaxOrderNo" resultType="int">
		select max(order_no) from `order`
	</select>
	
	<select id="selectOrderCountById" parameterType="str" resultType="int">
		select count(*) from order_view 
		where mem_id = #{memId}
	</select>
	
	<select id="selectOrderCountByProd" parameterType="int" resultType="int">
		select sum(quantity) from order_view where prod_no = #{prodNo} and order_state = 4
	</select>
	
	<select id="selectOrderTotalList" resultMap="orderMap">
		select * from order_view group by order_no
		order by order_no desc, order_state asc 
	</select>
	
	<select id="selectOrderTotalCount" resultType="int">
		select count(*) from `order`
	</select>
	
	<select id="selectOrderDepList" resultMap="orderMap">
		select * from order_view 
		where order_state = 1
		and cancel_yn != 'y'
		group by order_no 
		order by order_no desc
	</select>
	
	<select id="selectOrderDepCount" resultType="int">
		select count(*) from `order` where order_state = 1 and cancel_yn != 'y'
	</select>
	
	<update id="updateOrderDep" parameterType="int">
		update `order` set order_state = 2
		where order_no = #{orderNo}
	</update>
	
	<select id="selectOrderShipList" resultMap="orderMap">
		select * from order_view 
		where order_state != 1
		and cancel_yn != 'y'
		group by order_no 
		order by order_no desc
	</select>
	
	<select id="selectOrderShipCount" resultType="int">
		select count(*) from `order` where order_state != 1 and cancel_yn != 'y'
	</select>
	
	<update id="updateOrderShip" parameterType="hashmap">
		update `order` set order_state = #{orderState}
		where order_no = #{orderNo}
	</update>
	
	<select id="selectOrderCancelList" resultMap="orderMap">
		select * from order_view 
		where cancel_yn != 'n'
		group by order_no 
		order by order_no desc
	</select>
	
	<select id="selectOrderCancelCount" resultType="int">
		select count(*) from `order` where cancel_yn != 'n'
	</select>
	
	<update id="updateOrderCancel" parameterType="hashmap">
		update `order` set cancel_yn = #{cancelyn}
		where order_no = #{orderNo}
	</update>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'name'.toString()">
				and mem_name = like concat('%',#{keyword},'%')
			</if>
			<if test="searchType == 'no'.toString()">
				and order_serial like concat('%',#{keyword},'%')
			</if>
		</if>
	</sql>
	
	<select id="selectOrderListByComplete" resultMap="orderMap">
		select * from order_view where order_state=4 and cancel_yn != 'y' and review_yn = 'n'
		<include refid="search"></include>
		group by order_no order by order_no desc
	</select>
	
	<select id="selectOrderListCountByComplete" resultType="int">
		select count(*) from `order` where order_state=4 and cancel_yn != 'y' and review_yn = 'n'
		<include refid="search"></include>
	</select>
	
	<update id="updateReviewyn" parameterType="str">
		update `order` set review_yn = 'y' where order_serial = #{orderSerial}
	</update>
	
	<select id="selectOrderListForTotSale" parameterType="str" resultMap="orderMap">
		select * from order_view where date_format(order_date, '%Y-%m') = #{date} 
		group by order_no
	</select>
	
	<sql id="paySearch">
		<if test="cri.searchType != null">
			<if test="cri.searchType == 'name'.toString()">
				and mem_name like concat('%',#{cri.keyword},'%')
			</if>
			<if test="cri.searchType == 'no'.toString()">
				and order_serial like concat('%',#{cri.keyword},'%')
			</if>
		</if>
	</sql>
	
	<select id="selectOrderSearchListForPay" parameterType="hashmap" resultMap="orderMap">
		select * from order_view where date_format(order_date, '%Y-%m') = #{date} 
		<include refid="paySearch"></include>
		group by order_no order by order_state desc
	</select>
	
	<select id="selectOrderSearchListForPayCount" parameterType="hashmap" resultType="int">
		select count(*) from `order` where date_format(order_date, '%Y-%m') = #{date} 
		<include refid="paySearch"></include>
	</select>
	
	<select id="selectMyOrderList" parameterType="str" resultMap="orderMap">
		select * from order_view where mem_id = #{memId}
		group by order_no order by order_no desc
	</select>
	
	<select id="selectOrderTotalListForBalju" parameterType="str" resultMap="orderMap">
		select a.* from order_view a, balju b where type = 2 and a.balju_no = b.balju_no 
		and (balju_sendid = #{adminId} or balju_recid = #{adminId}) 
		group by order_no
		order by order_no desc, order_state asc
	</select>
	
	<select id="selectOrderTotalCountForBalju" parameterType="str" resultType="int">
		select count(*) from `order` a, balju b where type = 2 and a.balju_no = b.balju_no 
		and (balju_sendid = #{adminId} or balju_recid = #{adminId}) 
	</select>
	
	<select id="selectOrderDepListForBalju" parameterType="str" resultMap="orderMap">
		select a.* from order_view a, balju b where type = 2 and a.balju_no = b.balju_no 
		and (balju_sendid = #{adminId} or balju_recid = #{adminId}) 
		and order_state = 1 and cancel_yn != 'y'
		group by order_no order by order_no desc
	</select>
	
	<select id="selectOrderDepCountForBalju" parameterType="str" resultType="int">
		select count(*) from `order` a, balju b where type = 2 and a.balju_no = b.balju_no 
		and (balju_sendid = #{adminId} or balju_recid = #{adminId}) 
		and order_state = 1 and cancel_yn != 'y'
	</select>
	
	<select id="selectOrderShipListForBalju" parameterType="str" resultMap="orderMap">
		select a.* from order_view a, balju b where type = 2 and a.balju_no = b.balju_no 
		and (balju_sendid = #{adminId} or balju_recid = #{adminId}) 
		and order_state != 1 and cancel_yn != 'y'
		group by order_no order by order_no desc
	</select>
	
	<select id="selectOrderShipCountForBalju" parameterType="str" resultType="int">
		select count(*) from `order` a, balju b where type = 2 and a.balju_no = b.balju_no 
		and (balju_sendid = #{adminId} or balju_recid = #{adminId}) 
		and order_state != 1 and cancel_yn != 'y'
	</select>
	
	<update id="updateOrderSerial" parameterType="order">
		update `order` set order_serial = #{orderSerial} where order_no = #{orderNo}
	</update>
	
	<select id="selectOrderListThisMonth" resultMap="orderMap">
		select * from `order` where month(order_date) = month(curdate())
		order by order_no desc
	</select>
	
	<select id="selectOrderListThisDay" resultMap="orderMap">
		select * from `order` where date_format(order_date, '%Y-%m-%d') = curdate()
		order by order_no desc
	</select>
</mapper>