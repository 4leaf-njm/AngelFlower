<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Product-Mapper">
	<resultMap id="productMap" type="product">
		<id property="prodNo" column="prod_no" />
		<result property="name" column="prod_name" />
		<result property="realprice" column="prod_realprice" />
		<result property="price1" column="prod_price1" />
		<result property="price2" column="prod_price2" />
		<result property="save" column="prod_save" />
		<result property="info" column="prod_info" />
		<result property="image" column="prod_image" />
		<result property="category" column="category" />
		<result property="bestyn" column="best_yn" />
		<result property="useyn" column="use_yn" />
	</resultMap>
	
	<select id="selectProductByNo" parameterType="int" resultMap="productMap">
		select * from product where prod_no = #{prodNo}
	</select>
	
	<sql id="sort">
		<if test="sort != null">
			<if test="sort == 1">
				(select sum(quantity) from order_view where cancel_yn != 'y' and order_state = 4 and prod_no = product.prod_no) desc,
			</if>
			<if test="sort == 2">
				(select count(*) from review where type = 2 and prod_no = product.prod_no) desc,
			</if>
			<if test="sort == 3">
				prod_price2 desc,
			</if>
			<if test="sort == 4">
				prod_price2 asc,
			</if>
		</if>
	</sql>
	
	<select id="selectProductList" parameterType="hashmap" resultMap="productMap">
		select * from product where category = #{category} and use_yn = 'y'
		order by 
		<include refid="sort"></include>		
		prod_no desc;
	</select>
	
	<select id="selectProductListCount" parameterType="int" resultType="int">
		select count(*) from product where category = #{category} and use_yn = 'y'
	</select>
	
	<select id="selectProductBestList" parameterType="int" resultMap="productMap">
		select * from product where category = #{category} and best_yn = 'y' and use_yn = 'y'
		order by prod_no desc;
	</select>
	
	<select id="selectProductTotalList" resultMap="productMap">
		select * from product 
		order by category asc, prod_no desc
	</select>
	
	<select id="selectProductTotalCount" resultType="int">
		select count(*) from product
	</select>
	
	<update id="insertProduct" parameterType="product">
		insert into product(prod_name, prod_realprice, prod_price1, prod_price2, 
		prod_save, prod_info, prod_image, category, best_yn, use_yn)
		values(#{name}, #{realprice}, #{price1}, #{price2}, #{save}, #{info},
		#{image}, #{category}, #{bestyn}, #{useyn})
	</update>
	
	<update id="updateProduct" parameterType="product">
		update product set prod_name = #{name}, prod_realprice = #{realprice}, prod_price1 = #{price1},
		prod_price2 = #{price2}, prod_save = #{save}, prod_info = #{info}, prod_image = #{image},
		category = #{category}, best_yn = #{bestyn}, use_yn = #{useyn}
		where prod_no = #{prodNo}
	</update>
	
	<update id="deleteProduct" parameterType="int">
		delete from product where prod_no = #{prodNo}
	</update>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'name'.toString()">
				and prod_name like concat('%',#{keyword},'%')
			</if>
		</if>
	</sql>
	
	<select id="selectProdListSearch" resultMap="productMap">
		select * from product where use_yn = 'y'
		<include refid="search"></include>
		order by category asc, prod_no desc
	</select>
	
	<select id="selectProdListSearchCount" resultType="int">
		select count(*) from product where use_yn = 'y'
		<include refid="search"></include>
	</select>
	
	<select id="selectBestCountByCate" parameterType="int" resultType="int">
		select count(*) from product where category = #{category} and best_yn = 'y'
	</select>
	
	<select id="selectProductSearch" parameterType="prodreq" resultMap="productMap">
		select * from product where (prod_name like concat('%',#{pname},'%') || prod_info like concat('%',#{pname},'%')) 
		<if test="p1 != null and p1 != '' and p2 != null and p2 != ''">
			and prod_price2 between #{p1} and #{p2}
		</if>
		<if test="p1 != null and p1 != ''">
			<![CDATA[and prod_price2 >= #{p1}]]>
		</if>
		<if test="p2 != null and p2 != ''">
			<![CDATA[and prod_price2 <= #{p2}]]>
		</if>
	</select>
</mapper>